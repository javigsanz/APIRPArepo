//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APIRPA.AuthAppService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Autorizar.DatosApp", Namespace="http://schemas.datacontract.org/2004/07/seguridadv2.BL")]
    [System.SerializableAttribute()]
    public partial struct AutorizarDatosApp : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool autorizadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idAppField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool autorizado {
            get {
                return this.autorizadoField;
            }
            set {
                if ((this.autorizadoField.Equals(value) != true)) {
                    this.autorizadoField = value;
                    this.RaisePropertyChanged("autorizado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idApp {
            get {
                return this.idAppField;
            }
            set {
                if ((this.idAppField.Equals(value) != true)) {
                    this.idAppField = value;
                    this.RaisePropertyChanged("idApp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthAppService.IautorizarApp")]
    public interface IautorizarApp {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IautorizarApp/Autorizar", ReplyAction="http://tempuri.org/IautorizarApp/AutorizarResponse")]
        APIRPA.AuthAppService.AutorizarDatosApp Autorizar(byte[] certificado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IautorizarApp/Autorizar", ReplyAction="http://tempuri.org/IautorizarApp/AutorizarResponse")]
        System.Threading.Tasks.Task<APIRPA.AuthAppService.AutorizarDatosApp> AutorizarAsync(byte[] certificado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IautorizarApp/AutorizarBase64", ReplyAction="http://tempuri.org/IautorizarApp/AutorizarBase64Response")]
        APIRPA.AuthAppService.AutorizarDatosApp AutorizarBase64(string certificadoBase64);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IautorizarApp/AutorizarBase64", ReplyAction="http://tempuri.org/IautorizarApp/AutorizarBase64Response")]
        System.Threading.Tasks.Task<APIRPA.AuthAppService.AutorizarDatosApp> AutorizarBase64Async(string certificadoBase64);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IautorizarAppChannel : APIRPA.AuthAppService.IautorizarApp, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IautorizarAppClient : System.ServiceModel.ClientBase<APIRPA.AuthAppService.IautorizarApp>, APIRPA.AuthAppService.IautorizarApp {
        
        public IautorizarAppClient() {
        }
        
        public IautorizarAppClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IautorizarAppClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IautorizarAppClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IautorizarAppClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public APIRPA.AuthAppService.AutorizarDatosApp Autorizar(byte[] certificado) {
            return base.Channel.Autorizar(certificado);
        }
        
        public System.Threading.Tasks.Task<APIRPA.AuthAppService.AutorizarDatosApp> AutorizarAsync(byte[] certificado) {
            return base.Channel.AutorizarAsync(certificado);
        }
        
        public APIRPA.AuthAppService.AutorizarDatosApp AutorizarBase64(string certificadoBase64) {
            return base.Channel.AutorizarBase64(certificadoBase64);
        }
        
        public System.Threading.Tasks.Task<APIRPA.AuthAppService.AutorizarDatosApp> AutorizarBase64Async(string certificadoBase64) {
            return base.Channel.AutorizarBase64Async(certificadoBase64);
        }
    }
}
